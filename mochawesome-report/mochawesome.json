{
  "stats": {
    "suites": 5,
    "tests": 13,
    "passes": 10,
    "pending": 0,
    "failures": 3,
    "start": "2023-10-04T06:20:17.684Z",
    "end": "2023-10-04T06:20:17.696Z",
    "duration": 12,
    "testsRegistered": 13,
    "passPercent": 76.92307692307693,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "19ea1204-42c4-4d15-bc6c-e5426483a723",
      "title": "",
      "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/isNumberEven.spec.js",
      "file": "/test/numbers-validator/isNumberEven.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6f897cf5-7395-414f-b3c7-01bae20e0340",
          "title": "NumbersValidator",
          "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"NumbersValidator\"",
              "fullTitle": "NumbersValidator \"before each\" hook in \"NumbersValidator\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "90d164a0-f7cb-4252-a27e-604b4de49212",
              "parentUUID": "6f897cf5-7395-414f-b3c7-01bae20e0340",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "60a89efc-56b0-4d15-b3ed-65f06ff4eb5a",
              "title": "isNumberEven",
              "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/isNumberEven.spec.js",
              "file": "/test/numbers-validator/isNumberEven.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for even numbers",
                  "fullTitle": "NumbersValidator isNumberEven should return true for even numbers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isNumberEven(2)).to.be.equal(false);",
                  "err": {
                    "message": "AssertionError: expected true to equal false",
                    "estack": "AssertionError: expected true to equal false\n    at Context.<anonymous> (file:///Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/isNumberEven.spec.js:12:47)\n    at process.processImmediate (node:internal/timers:476:21)",
                    "diff": "- true\n+ false\n"
                  },
                  "uuid": "e1201e3a-e67c-471d-8f05-7449025b2ccf",
                  "parentUUID": "60a89efc-56b0-4d15-b3ed-65f06ff4eb5a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for odd numbers",
                  "fullTitle": "NumbersValidator isNumberEven should return false for odd numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isNumberEven(1)).to.be.equal(false);",
                  "err": {},
                  "uuid": "197c16dc-bf89-4fff-b75a-726ce60a1f79",
                  "parentUUID": "60a89efc-56b0-4d15-b3ed-65f06ff4eb5a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error for non-numeric inputs",
                  "fullTitle": "NumbersValidator isNumberEven should throw an error for non-numeric inputs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(() => validator.isNumberEven('string')).to.throw('[string] is not of type \"Number\" it is of type \"string\"');",
                  "err": {},
                  "uuid": "55b6e5c6-8c9b-48d0-86fa-38177a232fdc",
                  "parentUUID": "60a89efc-56b0-4d15-b3ed-65f06ff4eb5a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "197c16dc-bf89-4fff-b75a-726ce60a1f79",
                "55b6e5c6-8c9b-48d0-86fa-38177a232fdc"
              ],
              "failures": [
                "e1201e3a-e67c-471d-8f05-7449025b2ccf"
              ],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3b045212-d048-4368-a146-ad9d9acf7916",
              "title": "getEvenNumbersFromArray",
              "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/isNumberEven.spec.js",
              "file": "/test/numbers-validator/isNumberEven.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should retrieve even numbers from an array",
                  "fullTitle": "NumbersValidator getEvenNumbersFromArray should retrieve even numbers from an array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.getEvenNumbersFromArray([1, 2, 3, 4])).to.deep.equal([2, 4]);",
                  "err": {},
                  "uuid": "58ae9786-657d-439e-ae5e-7827058cc81e",
                  "parentUUID": "3b045212-d048-4368-a146-ad9d9acf7916",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return an empty array if there are no even numbers",
                  "fullTitle": "NumbersValidator getEvenNumbersFromArray should return an empty array if there are no even numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.getEvenNumbersFromArray([1, 3, 5])).to.deep.equal([]);",
                  "err": {},
                  "uuid": "b9fe26fd-1bf1-4526-b95d-6290e679aa56",
                  "parentUUID": "3b045212-d048-4368-a146-ad9d9acf7916",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error if the array contains non-numeric values",
                  "fullTitle": "NumbersValidator getEvenNumbersFromArray should throw an error if the array contains non-numeric values",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(() => validator.getEvenNumbersFromArray([1, 2, 'three'])).to.throw('[1,2,three] is not an array of \"Numbers\"');",
                  "err": {},
                  "uuid": "1515b105-2117-4b19-b213-56205da791a2",
                  "parentUUID": "3b045212-d048-4368-a146-ad9d9acf7916",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "58ae9786-657d-439e-ae5e-7827058cc81e",
                "b9fe26fd-1bf1-4526-b95d-6290e679aa56",
                "1515b105-2117-4b19-b213-56205da791a2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "090c7b8d-eee2-4032-b1f2-31b8c943ae98",
              "title": "isAllNumbers",
              "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/isNumberEven.spec.js",
              "file": "/test/numbers-validator/isNumberEven.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if all elements of an array are numbers",
                  "fullTitle": "NumbersValidator isAllNumbers should return true if all elements of an array are numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isAllNumbers([1, 2, 3])).to.be.equal(false);",
                  "err": {
                    "message": "AssertionError: expected true to equal false",
                    "estack": "AssertionError: expected true to equal false\n    at Context.<anonymous> (file:///Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/isNumberEven.spec.js:40:55)\n    at process.processImmediate (node:internal/timers:476:21)",
                    "diff": "- true\n+ false\n"
                  },
                  "uuid": "0d99de4e-8b24-4f19-b709-35866dbc0a17",
                  "parentUUID": "090c7b8d-eee2-4032-b1f2-31b8c943ae98",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if any element in the array is not a number",
                  "fullTitle": "NumbersValidator isAllNumbers should return false if any element in the array is not a number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isAllNumbers([1, 2, 'three'])).to.be.equal(false);",
                  "err": {},
                  "uuid": "1fea9a15-dfe2-4d03-b4db-d60464ec5109",
                  "parentUUID": "090c7b8d-eee2-4032-b1f2-31b8c943ae98",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an empty array",
                  "fullTitle": "NumbersValidator isAllNumbers should return false for an empty array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isAllNumbers([])).to.be.equal(false);",
                  "err": {
                    "message": "AssertionError: expected true to equal false",
                    "estack": "AssertionError: expected true to equal false\n    at Context.<anonymous> (file:///Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/isNumberEven.spec.js:48:48)\n    at process.processImmediate (node:internal/timers:476:21)",
                    "diff": "- true\n+ false\n"
                  },
                  "uuid": "b74dd412-e652-4438-9afe-bcb06be21e7f",
                  "parentUUID": "090c7b8d-eee2-4032-b1f2-31b8c943ae98",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error for non-array inputs",
                  "fullTitle": "NumbersValidator isAllNumbers should throw an error for non-array inputs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(() => validator.isAllNumbers('string')).to.throw('[string] is not an array');",
                  "err": {},
                  "uuid": "70b254a2-a13b-44f1-89e8-ea9f6e5bbd23",
                  "parentUUID": "090c7b8d-eee2-4032-b1f2-31b8c943ae98",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1fea9a15-dfe2-4d03-b4db-d60464ec5109",
                "70b254a2-a13b-44f1-89e8-ea9f6e5bbd23"
              ],
              "failures": [
                "0d99de4e-8b24-4f19-b709-35866dbc0a17",
                "b74dd412-e652-4438-9afe-bcb06be21e7f"
              ],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "539116d5-4646-4c40-9795-05ff377babf9",
              "title": "isInteger",
              "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/isNumberEven.spec.js",
              "file": "/test/numbers-validator/isNumberEven.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for integer values",
                  "fullTitle": "NumbersValidator isInteger should return true for integer values",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// eslint-disable-next-line no-unused-expressions\nexpect(validator.isInteger(4)).to.be.true;",
                  "err": {},
                  "uuid": "ab47d659-d098-48b5-b0ef-118d777b2d01",
                  "parentUUID": "539116d5-4646-4c40-9795-05ff377babf9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-integer values",
                  "fullTitle": "NumbersValidator isInteger should return false for non-integer values",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isInteger(4.5)).to.be.equal(false);",
                  "err": {},
                  "uuid": "68e4d656-5f70-4f80-ac10-8846bddfd450",
                  "parentUUID": "539116d5-4646-4c40-9795-05ff377babf9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error for non-numeric inputs",
                  "fullTitle": "NumbersValidator isInteger should throw an error for non-numeric inputs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(() => validator.isInteger('string')).to.throw('[string] is not a number');",
                  "err": {},
                  "uuid": "2fb40419-46b2-49a9-a7df-258fbe13e7d9",
                  "parentUUID": "539116d5-4646-4c40-9795-05ff377babf9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ab47d659-d098-48b5-b0ef-118d777b2d01",
                "68e4d656-5f70-4f80-ac10-8846bddfd450",
                "2fb40419-46b2-49a9-a7df-258fbe13e7d9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}