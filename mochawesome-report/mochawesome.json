{
  "stats": {
    "suites": 5,
    "tests": 13,
    "passes": 12,
    "pending": 0,
    "failures": 1,
    "start": "2023-10-04T06:44:44.810Z",
    "end": "2023-10-04T06:44:44.822Z",
    "duration": 12,
    "testsRegistered": 13,
    "passPercent": 92.3076923076923,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f938403e-60e6-4f11-af0a-667620500eef",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "df45a508-b4b1-41ff-b3ff-f815791c0be0",
          "title": "NumbersValidator",
          "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"NumbersValidator\"",
              "fullTitle": "NumbersValidator \"before each\" hook in \"NumbersValidator\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "12e80598-5759-4551-b86a-b6403ec6cc7a",
              "parentUUID": "df45a508-b4b1-41ff-b3ff-f815791c0be0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f4eea732-4a0e-41e9-926e-012d0c3aca86",
              "title": "isNumberEven",
              "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/isNumberEven.spec.js",
              "file": "/test/numbers-validator/isNumberEven.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for even numbers",
                  "fullTitle": "NumbersValidator isNumberEven should return true for even numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isNumberEven(2)).to.be.equal(true);",
                  "err": {},
                  "uuid": "144cd495-2172-43b6-a9ba-f871bace0713",
                  "parentUUID": "f4eea732-4a0e-41e9-926e-012d0c3aca86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for odd numbers",
                  "fullTitle": "NumbersValidator isNumberEven should return false for odd numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isNumberEven(1)).to.be.equal(false);",
                  "err": {},
                  "uuid": "7d208e84-50a0-42ff-916b-ea83582a86ee",
                  "parentUUID": "f4eea732-4a0e-41e9-926e-012d0c3aca86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error for non-numeric inputs",
                  "fullTitle": "NumbersValidator isNumberEven should throw an error for non-numeric inputs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(() => validator.isNumberEven('string')).to.throw('[string] is not of type \"Number\" it is of type \"string\"');",
                  "err": {},
                  "uuid": "eebad9e9-603f-4e13-a7a4-8557247f8668",
                  "parentUUID": "f4eea732-4a0e-41e9-926e-012d0c3aca86",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "144cd495-2172-43b6-a9ba-f871bace0713",
                "7d208e84-50a0-42ff-916b-ea83582a86ee",
                "eebad9e9-603f-4e13-a7a4-8557247f8668"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "394ecdaa-3ab8-4382-bb72-54e1ab98ecf6",
              "title": "getEvenNumbersFromArray",
              "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/isNumberEven.spec.js",
              "file": "/test/numbers-validator/isNumberEven.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should retrieve even numbers from an array",
                  "fullTitle": "NumbersValidator getEvenNumbersFromArray should retrieve even numbers from an array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.getEvenNumbersFromArray([1, 2, 3, 4])).to.deep.equal([2, 4]);",
                  "err": {},
                  "uuid": "853ed777-6753-453c-b554-66dbac587a0a",
                  "parentUUID": "394ecdaa-3ab8-4382-bb72-54e1ab98ecf6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return an empty array if there are no even numbers",
                  "fullTitle": "NumbersValidator getEvenNumbersFromArray should return an empty array if there are no even numbers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.getEvenNumbersFromArray([1, 3, 5])).to.deep.equal([]);",
                  "err": {},
                  "uuid": "06101b50-3858-4be2-a73e-8a8f2ae985e2",
                  "parentUUID": "394ecdaa-3ab8-4382-bb72-54e1ab98ecf6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error if the array contains non-numeric values",
                  "fullTitle": "NumbersValidator getEvenNumbersFromArray should throw an error if the array contains non-numeric values",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(() => validator.getEvenNumbersFromArray([1, 2, 'three'])).to.throw('[1,2,three] is not an array of \"Numbers\"');",
                  "err": {},
                  "uuid": "bf251da8-8a0c-488e-929e-171b65375ece",
                  "parentUUID": "394ecdaa-3ab8-4382-bb72-54e1ab98ecf6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "853ed777-6753-453c-b554-66dbac587a0a",
                "06101b50-3858-4be2-a73e-8a8f2ae985e2",
                "bf251da8-8a0c-488e-929e-171b65375ece"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d5ad1cc6-db1f-49b5-9861-df0cae1ed814",
              "title": "isAllNumbers",
              "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/isNumberEven.spec.js",
              "file": "/test/numbers-validator/isNumberEven.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if all elements of an array are numbers",
                  "fullTitle": "NumbersValidator isAllNumbers should return true if all elements of an array are numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isAllNumbers([1, 2, 3])).to.be.equal(true);",
                  "err": {},
                  "uuid": "e94f37d4-b9f7-4a23-8f6f-4c22bdadc868",
                  "parentUUID": "d5ad1cc6-db1f-49b5-9861-df0cae1ed814",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if any element in the array is not a number",
                  "fullTitle": "NumbersValidator isAllNumbers should return false if any element in the array is not a number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isAllNumbers([1, 2, 'three'])).to.be.equal(false);",
                  "err": {},
                  "uuid": "4b52c685-4a83-43b7-b102-0b71c2b23d9b",
                  "parentUUID": "d5ad1cc6-db1f-49b5-9861-df0cae1ed814",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an empty array",
                  "fullTitle": "NumbersValidator isAllNumbers should return false for an empty array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isAllNumbers([])).to.be.equal(false);",
                  "err": {
                    "message": "AssertionError: expected true to equal false",
                    "estack": "AssertionError: expected true to equal false\n    at Context.<anonymous> (file:///Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/isNumberEven.spec.js:48:48)\n    at process.processImmediate (node:internal/timers:476:21)",
                    "diff": "- true\n+ false\n"
                  },
                  "uuid": "078f7664-0c31-4e19-9fab-2ca3d6f77f61",
                  "parentUUID": "d5ad1cc6-db1f-49b5-9861-df0cae1ed814",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error for non-array inputs",
                  "fullTitle": "NumbersValidator isAllNumbers should throw an error for non-array inputs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(() => validator.isAllNumbers('string')).to.throw('[string] is not an array');",
                  "err": {},
                  "uuid": "06bdf75b-bbf8-4430-b4cb-ba166ff10a41",
                  "parentUUID": "d5ad1cc6-db1f-49b5-9861-df0cae1ed814",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e94f37d4-b9f7-4a23-8f6f-4c22bdadc868",
                "4b52c685-4a83-43b7-b102-0b71c2b23d9b",
                "06bdf75b-bbf8-4430-b4cb-ba166ff10a41"
              ],
              "failures": [
                "078f7664-0c31-4e19-9fab-2ca3d6f77f61"
              ],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1e8a3a40-b96f-4057-824b-d2406f8ce0d9",
              "title": "isInteger",
              "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/isNumberEven.spec.js",
              "file": "/test/numbers-validator/isNumberEven.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for integer values",
                  "fullTitle": "NumbersValidator isInteger should return true for integer values",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// eslint-disable-next-line no-unused-expressions\nexpect(validator.isInteger(4)).to.be.true;",
                  "err": {},
                  "uuid": "efb9dd74-e062-48c7-b63f-acbe2760f7b3",
                  "parentUUID": "1e8a3a40-b96f-4057-824b-d2406f8ce0d9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-integer values",
                  "fullTitle": "NumbersValidator isInteger should return false for non-integer values",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isInteger(4.5)).to.be.equal(false);",
                  "err": {},
                  "uuid": "24131b1b-3fcd-412b-8214-1fd6f74c95ce",
                  "parentUUID": "1e8a3a40-b96f-4057-824b-d2406f8ce0d9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error for non-numeric inputs",
                  "fullTitle": "NumbersValidator isInteger should throw an error for non-numeric inputs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(() => validator.isInteger('string')).to.throw('[string] is not a number');",
                  "err": {},
                  "uuid": "09b705db-3a4e-486b-b5d3-3089c2613c6c",
                  "parentUUID": "1e8a3a40-b96f-4057-824b-d2406f8ce0d9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "efb9dd74-e062-48c7-b63f-acbe2760f7b3",
                "24131b1b-3fcd-412b-8214-1fd6f74c95ce",
                "09b705db-3a4e-486b-b5d3-3089c2613c6c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}