{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-01T16:38:06.044Z",
    "end": "2023-10-01T16:38:06.051Z",
    "duration": 7,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1655cfff-f117-4bac-b447-53fda23c59c5",
      "title": "",
      "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/isNumberEven.spec.js",
      "file": "/test/numbers-validator/isNumberEven.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "276c6f11-6b03-4452-b2ab-ab7e9835e3d2",
          "title": "NumbersValidator",
          "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"NumbersValidator\"",
              "fullTitle": "NumbersValidator \"before each\" hook in \"NumbersValidator\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "62931aec-80cd-4671-a478-d77ed8149683",
              "parentUUID": "276c6f11-6b03-4452-b2ab-ab7e9835e3d2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should determine if a number is even",
              "fullTitle": "NumbersValidator should determine if a number is even",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.isNumberEven(2)).to.be.true;\nexpect(validator.isNumberEven(1)).to.be.false;",
              "err": {},
              "uuid": "c0d92a6e-cbef-465a-b5bc-21cbf555a180",
              "parentUUID": "276c6f11-6b03-4452-b2ab-ab7e9835e3d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should retrieve even numbers from an array",
              "fullTitle": "NumbersValidator should retrieve even numbers from an array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.getEvenNumbersFromArray([1, 2, 3, 4])).to.deep.equal([2, 4]);",
              "err": {},
              "uuid": "db388ba2-c7bf-403c-9c81-3133d14c1fde",
              "parentUUID": "276c6f11-6b03-4452-b2ab-ab7e9835e3d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should determine if all elements of an array are numbers",
              "fullTitle": "NumbersValidator should determine if all elements of an array are numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.isAllNumbers([1, 2, 3])).to.be.true;\nexpect(validator.isAllNumbers([1, 2, 'three'])).to.be.false;",
              "err": {},
              "uuid": "dd7f0cc5-ce45-458f-ac64-0fc6687dba3f",
              "parentUUID": "276c6f11-6b03-4452-b2ab-ab7e9835e3d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should determine if a value is an integer",
              "fullTitle": "NumbersValidator should determine if a value is an integer",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.isInteger(4)).to.be.true;\nexpect(validator.isInteger(4.5)).to.be.false;",
              "err": {},
              "uuid": "5ff09415-0d49-48b2-8a32-81b1ae7b84bc",
              "parentUUID": "276c6f11-6b03-4452-b2ab-ab7e9835e3d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if input to isNumberEven is not a number",
              "fullTitle": "NumbersValidator should throw an error if input to isNumberEven is not a number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => validator.isNumberEven('string')).to.throw('[string] is not of type \"Number\" it is of type \"string\"');",
              "err": {},
              "uuid": "29ad659e-e4fe-4f2e-932b-4f2ca8c0336a",
              "parentUUID": "276c6f11-6b03-4452-b2ab-ab7e9835e3d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if input to getEvenNumbersFromArray is not an array of numbers",
              "fullTitle": "NumbersValidator should throw an error if input to getEvenNumbersFromArray is not an array of numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => validator.getEvenNumbersFromArray([1, 2, 'three'])).to.throw('[1,2,three] is not an array of \"Numbers\"');",
              "err": {},
              "uuid": "5fa38dfd-df52-4759-ab09-a7a0afc944bf",
              "parentUUID": "276c6f11-6b03-4452-b2ab-ab7e9835e3d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if input to isAllNumbers is not an array",
              "fullTitle": "NumbersValidator should throw an error if input to isAllNumbers is not an array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => validator.isAllNumbers('string')).to.throw('[string] is not an array');",
              "err": {},
              "uuid": "389fab16-e59b-428d-a1ca-afc2d9e13218",
              "parentUUID": "276c6f11-6b03-4452-b2ab-ab7e9835e3d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if input to isInteger is not a number",
              "fullTitle": "NumbersValidator should throw an error if input to isInteger is not a number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => validator.isInteger('string')).to.throw('[string] is not a number');",
              "err": {},
              "uuid": "e799eca2-95c8-4495-a458-a67d6cd08420",
              "parentUUID": "276c6f11-6b03-4452-b2ab-ab7e9835e3d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0d92a6e-cbef-465a-b5bc-21cbf555a180",
            "db388ba2-c7bf-403c-9c81-3133d14c1fde",
            "dd7f0cc5-ce45-458f-ac64-0fc6687dba3f",
            "5ff09415-0d49-48b2-8a32-81b1ae7b84bc",
            "29ad659e-e4fe-4f2e-932b-4f2ca8c0336a",
            "5fa38dfd-df52-4759-ab09-a7a0afc944bf",
            "389fab16-e59b-428d-a1ca-afc2d9e13218",
            "e799eca2-95c8-4495-a458-a67d6cd08420"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}