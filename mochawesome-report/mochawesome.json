{
  "stats": {
    "suites": 5,
    "tests": 13,
    "passes": 12,
    "pending": 0,
    "failures": 1,
    "start": "2023-10-03T17:15:39.059Z",
    "end": "2023-10-03T17:15:39.074Z",
    "duration": 15,
    "testsRegistered": 13,
    "passPercent": 92.3076923076923,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c4243de4-f049-4af1-9196-93ddde838bf7",
      "title": "",
      "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/NumberValidator.spec.js",
      "file": "/test/numbers-validator/NumberValidator.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cca6cfd1-268d-45b1-ac73-731eeedf26c1",
          "title": "NumbersValidator",
          "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/NumberValidator.spec.js",
          "file": "/test/numbers-validator/NumberValidator.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"NumbersValidator\"",
              "fullTitle": "NumbersValidator \"before each\" hook in \"NumbersValidator\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "6eb72663-b978-4edb-b10e-84422491a4a9",
              "parentUUID": "cca6cfd1-268d-45b1-ac73-731eeedf26c1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a98490ae-6976-4e30-a46d-809798134042",
              "title": "isNumberEven",
              "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/NumberValidator.spec.js",
              "file": "/test/numbers-validator/NumberValidator.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for even numbers",
                  "fullTitle": "NumbersValidator isNumberEven should return true for even numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isNumberEven(2)).to.be.true;",
                  "err": {},
                  "uuid": "478ddf41-4702-4da3-84d1-eaeb3654a9e5",
                  "parentUUID": "a98490ae-6976-4e30-a46d-809798134042",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for odd numbers",
                  "fullTitle": "NumbersValidator isNumberEven should return false for odd numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isNumberEven(1)).to.be.false;",
                  "err": {},
                  "uuid": "caa5dff4-3616-43e6-9ec9-fcb1d63604d5",
                  "parentUUID": "a98490ae-6976-4e30-a46d-809798134042",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error for non-numeric inputs",
                  "fullTitle": "NumbersValidator isNumberEven should throw an error for non-numeric inputs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(() => validator.isNumberEven('string')).to.throw('[string] is not of type \"Number\" it is of type \"string\"');",
                  "err": {},
                  "uuid": "7f62a4ed-aaa7-4b78-a55d-e5663001ab1e",
                  "parentUUID": "a98490ae-6976-4e30-a46d-809798134042",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "478ddf41-4702-4da3-84d1-eaeb3654a9e5",
                "caa5dff4-3616-43e6-9ec9-fcb1d63604d5",
                "7f62a4ed-aaa7-4b78-a55d-e5663001ab1e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "89faa089-2420-429c-9b45-0b3cfa5d041c",
              "title": "getEvenNumbersFromArray",
              "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/NumberValidator.spec.js",
              "file": "/test/numbers-validator/NumberValidator.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should retrieve even numbers from an array",
                  "fullTitle": "NumbersValidator getEvenNumbersFromArray should retrieve even numbers from an array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.getEvenNumbersFromArray([1, 2, 3, 4])).to.deep.equal([2, 4]);",
                  "err": {},
                  "uuid": "a4da8c4d-1407-4909-bdf9-1822bcbc5051",
                  "parentUUID": "89faa089-2420-429c-9b45-0b3cfa5d041c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return an empty array if there are no even numbers",
                  "fullTitle": "NumbersValidator getEvenNumbersFromArray should return an empty array if there are no even numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.getEvenNumbersFromArray([1, 3, 5])).to.deep.equal([]);",
                  "err": {},
                  "uuid": "86890d6f-deca-4edd-b2a7-4795395f1595",
                  "parentUUID": "89faa089-2420-429c-9b45-0b3cfa5d041c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error if the array contains non-numeric values",
                  "fullTitle": "NumbersValidator getEvenNumbersFromArray should throw an error if the array contains non-numeric values",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(() => validator.getEvenNumbersFromArray([1, 2, 'three'])).to.throw('[1,2,three] is not an array of \"Numbers\"');",
                  "err": {},
                  "uuid": "f9c88b86-df22-4862-9d94-98df69c9d03a",
                  "parentUUID": "89faa089-2420-429c-9b45-0b3cfa5d041c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a4da8c4d-1407-4909-bdf9-1822bcbc5051",
                "86890d6f-deca-4edd-b2a7-4795395f1595",
                "f9c88b86-df22-4862-9d94-98df69c9d03a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "41272250-52af-45d3-b08e-bfec4f5d9b0b",
              "title": "isAllNumbers",
              "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/NumberValidator.spec.js",
              "file": "/test/numbers-validator/NumberValidator.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if all elements of an array are numbers",
                  "fullTitle": "NumbersValidator isAllNumbers should return true if all elements of an array are numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isAllNumbers([1, 2, 3])).to.be.true;",
                  "err": {},
                  "uuid": "9b186909-f879-45a8-81d2-a480c91e270c",
                  "parentUUID": "41272250-52af-45d3-b08e-bfec4f5d9b0b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if any element in the array is not a number",
                  "fullTitle": "NumbersValidator isAllNumbers should return false if any element in the array is not a number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isAllNumbers([1, 2, 'three'])).to.be.false;",
                  "err": {},
                  "uuid": "61701a46-ee1c-4573-8808-c2d8315cfeb9",
                  "parentUUID": "41272250-52af-45d3-b08e-bfec4f5d9b0b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for an empty array",
                  "fullTitle": "NumbersValidator isAllNumbers should return false for an empty array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isAllNumbers([])).to.be.false;",
                  "err": {
                    "message": "AssertionError: expected true to be false",
                    "estack": "AssertionError: expected true to be false\n    at Context.<anonymous> (file:///Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/NumberValidator.spec.js:48:47)\n    at process.processImmediate (node:internal/timers:476:21)",
                    "diff": "- true\n+ false\n"
                  },
                  "uuid": "ffe543ad-ce56-40eb-a98f-78fa151275a3",
                  "parentUUID": "41272250-52af-45d3-b08e-bfec4f5d9b0b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error for non-array inputs",
                  "fullTitle": "NumbersValidator isAllNumbers should throw an error for non-array inputs",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(() => validator.isAllNumbers('string')).to.throw('[string] is not an array');",
                  "err": {},
                  "uuid": "930bb863-155a-4ea6-bfaa-a211b70729c1",
                  "parentUUID": "41272250-52af-45d3-b08e-bfec4f5d9b0b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9b186909-f879-45a8-81d2-a480c91e270c",
                "61701a46-ee1c-4573-8808-c2d8315cfeb9",
                "930bb863-155a-4ea6-bfaa-a211b70729c1"
              ],
              "failures": [
                "ffe543ad-ce56-40eb-a98f-78fa151275a3"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "15c11be0-32bc-413a-abef-8aefa865b9dc",
              "title": "isInteger",
              "fullFile": "/Users/firdavskhujaibrokhimov/Desktop/Unit_testing_task/test/numbers-validator/NumberValidator.spec.js",
              "file": "/test/numbers-validator/NumberValidator.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for integer values",
                  "fullTitle": "NumbersValidator isInteger should return true for integer values",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isInteger(4)).to.be.true;",
                  "err": {},
                  "uuid": "64ded7ed-e5f8-42ea-b95a-88432c9d465b",
                  "parentUUID": "15c11be0-32bc-413a-abef-8aefa865b9dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-integer values",
                  "fullTitle": "NumbersValidator isInteger should return false for non-integer values",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(validator.isInteger(4.5)).to.be.false;",
                  "err": {},
                  "uuid": "f36e6b20-1f7a-413f-bb5f-3d55b0088238",
                  "parentUUID": "15c11be0-32bc-413a-abef-8aefa865b9dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error for non-numeric inputs",
                  "fullTitle": "NumbersValidator isInteger should throw an error for non-numeric inputs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(() => validator.isInteger('string')).to.throw('[string] is not a number');",
                  "err": {},
                  "uuid": "8522bcdf-b520-4132-b0f5-530d61fbb9cc",
                  "parentUUID": "15c11be0-32bc-413a-abef-8aefa865b9dc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "64ded7ed-e5f8-42ea-b95a-88432c9d465b",
                "f36e6b20-1f7a-413f-bb5f-3d55b0088238",
                "8522bcdf-b520-4132-b0f5-530d61fbb9cc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}